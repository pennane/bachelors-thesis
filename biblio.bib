@book{getify2016functional,
  title={Functional-Light-JS},
  author={Kyle Simpson},
  year={2016},
  url={https://github.com/getify/Functional-Light-JS},
  note={A balanced, pragmatic look at functional programming in JavaScript.}
}

@thesis{cantarella2024hyodyt,
  title={Funktionaalisen ohjelmoinnin hyödyt ja haitat},
  author={Toni Cantarella},
  year={2024},
  school={Theseus},
  url={https://www.theseus.fi/bitstream/handle/10024/853967/Cantarella_Toni.pdf?sequence=2&isAllowed=y}
}

@thesis{patala2020funktionaalinen,
  title={Funktionaalinen ohjelmointi JavaScriptissä},
  author={Saini Patala},
  year={2020},
  school={Theseus},
  url={https://www.theseus.fi/bitstream/handle/10024/339899/patala_saini.pdf?sequence=5&isAllowed=y}
}

@techreport{aaltodoc2024category,
  title={Applications of Category Theory to Web Programming},
  author={Aalto University},
  year={2024},
  institution={Aaltodoc},
  url={https://aaltodoc.aalto.fi/server/api/core/bitstreams/e0f5aefc-556f-4254-bf9d-03c22f930357/content}
}

@book{okhravi2024object,
  title={The Object Oriented Way},
  author={Christopher Okhravi},
  year={2024},
  note={Steel-manning the object oriented way.}
}

@online{mdn2024iterator,
  title={Iterator Helpers},
  author={{MDN Web Docs}},
  year={2024},
  url={https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator#iterator_helpers}
}

@misc{youtube2024functionalbros,
  title={Dear Functional Bros},
  author={nuML9SmdbJ4},
  year={2024},
  note={Functional programming is awesome, but functional programmers are bad marketers.},
  url={https://www.youtube.com/watch?v=nuML9SmdbJ4}
}

@misc{youtube2024reduce,
  title={Is reduce() bad? - HTTP 203},
  author={Jake Archibald, Surma},
  year={2024},
  note={More mental overhead, just make it into a loop.},
  url={https://www.youtube.com/watch?v=qaGjS7-qWzg}
}

@misc{youtube2024lambdacalculus,
  title={Lambda Calculus - Fundamentals of Lambda Calculus \& Functional Programming in JavaScript},
  author={YouTube User},
  year={2024},
  note={Fundamentals of Lambda Calculus and functional programming in JavaScript.},
  url={https://youtu.be/pAnLQ9jwN-E?si=KtwUaVzk5rlsNE-W}
}

@misc{youtube2024millionfold,
  title={A Million Ways to Fold in JS},
  author={YouTube User},
  year={2024},
  note={For showing the dumb dumb.},
  url={https://youtu.be/JZSoPZUoR58?si=u-ZOtRpODmBfugGh}
}

@misc{youtube2024categorytheory1,
  title={Category Theory 1.1: Motivation and Philosophy},
  author={YouTube User},
  year={2024},
  note={Category Theory is a higher-level language above Haskell, ML, and other languages.},
  url={https://www.youtube.com/watch?v=I8LbkfSSR58&list=PLBPj197h_u1TzCfrT2nho8FjdmWh_FR8s&index=10}
}

@misc{youtube2024categorytheory2,
  title={Category Theory 2.1: Functions, epimorphisms},
  author={YouTube User},
  year={2024},
  note={Semantics in language design and operational semantics.},
  url={https://youtu.be/O2lZkr-aAqk?si=NSufX4oGzLthrs7j}
}

@misc{youtube2024rules,
  title={Rules Have Reasons (Always Ask Why)},
  author={Christopher Okhravi},
  year={2024},
  url={https://www.youtube.com/watch?v=QeQ62E-1GeA&t=187s}
}

@misc{youtube2024impossible,
  title={Making Impossible States Impossible},
  author={Richard Feldman},
  year={2024},
  note={Static typing and the benefits of making impossible states impossible.},
  url={https://www.youtube.com/watch?v=IcgmSRJHu_8}
}

@online{wikipedia2024hindley-milner,
  title={Hindley–Milner type system},
  author={Wikipedia},
  year={2024},
  url={https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system}
}

@online{ramda2024docs,
  title={Ramda.js Documentation},
  author={{Ramda.js}},
  year={2024},
  url={https://ramdajs.com/docs/}
}

@online{ramda2024repl,
  title={Ramda.js REPL},
  author={{Ramda.js}},
  year={2024},
  url={https://ramdajs.com/repl/?v=0.30.1}
}
